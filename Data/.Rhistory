head(p)
#merge the dataframes
df <- merge(d, p[,-c(1:3)], by = "id", all=TRUE)
head(df)
df[which(is.na(df$pvis)),"pvis"]<-0
df<-df[,-1] #remove first id column
head(df)
###ADD pollination probability based on geometric decay
###load RDS files
#wd.path<-paste0("C:/LocalData/susakort/abm pollination/pollinatorsNL/Data_processing_ex_v2/RDS.prob.pol_V2")
wd.path<-paste0("C:/LocalData/susakort/abm pollination/pollinatorsNL/Data_processing_ex_v2/RDS.prob.pol_V2_beta")
listfile<- list.files(wd.path, pattern = "\\.rds$",full.names = T, recursive = TRUE)
f <- list.files(wd.path, pattern = "\\.rds$",full.names = T, recursive = TRUE) %>% map(readRDS)
f[[1]]
###ADD pollination probability based on geometric decay
###load RDS files
wd.path<-paste0("C:/LocalData/susakort/abm pollination/pollinatorsNL/Data_processing_ex_v2/RDS.prob.pol_V2")
listfile<- list.files(wd.path, pattern = "\\.rds$",full.names = T, recursive = TRUE)
f <- list.files(wd.path, pattern = "\\.rds$",full.names = T, recursive = TRUE) %>% map(readRDS)
f[[1]]
#load packages
library("tidyverse") #needed to easily summarise, analyse, and visualise data
library("ggpubr")    #arrange plot
library("sjPlot")    #visualizing results, making tables with model output
library("ggeffects")
library("MASS")      #nb.glm function
library("DHARMa")    #check residuals
library("glmmTMB")   #glmm
library("jtools")
library("fmsb")
library("performance") #check residuals, calculates pseudo R-squared values
#Figure dir
dirF<-"../Figures/"
#Working Dir
#setwd("C:/LocalData/susakort/abm pollination/Scripts_1st_submission/R_scripts") #setwd to your own directory
setwd("C:/LocalData/susakort/GitHub/NLmodel_GIT/NLmodelAnalyses/Data")
#data for experiment 2: 7 habitats and random nest location
vis_data<-read.csv("../Data/NLdata_ex_2.csv", header=TRUE) #import data
#add number of plant links
plant.l<- vis_data %>% arrange (run, plant_species) %>%  group_by(run, seed_percent, plant_species) %>% mutate(pl.links = n())
#add number of pollinator links
poll.l<- vis_data %>%  arrange (run, plant_species) %>%  group_by(run, seed_percent, pollinator_species) %>% mutate(pol.links = n())
plant.l_2<- plant.l %>% inner_join(poll.l)
vis.per.plant<-plant.l_2 %>% group_by(run, seed_percent, plant_species, connectance=conn, pl.dens) %>%
summarize(number_visits = sum(number_visits), cons = sum(cons), pvis = sum(pvis), pl.no=mean(plant.density), plant.links=mean(pl.links),pol.links=mean(pol.links))
vis.per.poll<-plant.l_2 %>% group_by(run, seed_percent, plant_species,  connectance=conn, pl.dens, pol.bm) %>%
summarize(number_visits = sum(number_visits), cons = sum(cons), pvis = sum(pvis), pl.no=mean(plant.density), plant.links=mean(pl.links),pol.links=mean(pol.links))
###mean visits per simulation across plants are used for the GLM
mean.vis.plant<-vis.per.plant %>% group_by(run, seed_percent, connectance) %>%
summarize(number_visits = mean(number_visits), cons = mean(cons), pvis = mean(pvis), mean.plant.dens=mean(pl.dens), mean.pl.no=mean(mean.plant.dens))
mod.vis2<-glmmTMB(round(number_visits)~log(seed_percent)*pol.links*pl.dens+(1|run),
family="nbinom2",
data=vis.per.plant)
pred <- expand.grid(seed_percent=seq(0.00001,1,0.001), pl.dens=c(0.1, 0.5,0.9), pol.links=c(2,4,6))
pred$run<-NA
pred$y <- predict(mod.vis2, pred, type="response",allow.new.levels=TRUE)
pred$se <- predict(mod.vis2, pred, type="response", se.fit = TRUE)$se
pred$lower <- pred$y - 1.96 * pred$se
pred$upper <- pred$y + 1.96 * pred$se
plot.vis2<-ggplot(pred,aes(x=log(seed_percent),y=y, color=factor(pol.links), linetype=factor(pol.links)),group=pol.links)+
theme_bw()+facet_grid(~pl.dens,labeller ="label_both", scales = "free") +
geom_ribbon(aes(ymin=lower, ymax=upper), linetype = 0, alpha=0.1, data=pred)+
scale_color_manual(values = c("#E69F00", "purple", "#00AFBB", "#000000"))+
geom_line()+ylab("Visitation rate")+xlab("") +labs(col ="poll links", linetype="poll links") +
theme(axis.text = element_text(size = 12))+ theme(axis.title = element_text(size = 14)) +
theme(axis.title.y = element_text(margin = margin(r = 10)))+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
strip.background = element_blank(),panel.border = element_rect(colour = "black"))+
theme(strip.text.x = element_text(size = 12, color = "black"))+
#theme(strip.text.y = element_text(size = 12, color = "black"))+
theme(strip.background = element_rect(color="grey0", fill="grey95", size=0.5, linetype="solid"))+
theme(legend.position="top")
plot.vis2
plot.vis2<-ggplot(pred,aes(x=log(seed_percent),y=y, color=factor(pol.links), linetype=factor(pol.links)),group=pol.links)+
theme_bw()+facet_grid(~pl.dens,labeller ="label_both", scales = "free") +
geom_ribbon(aes(ymin=lower, ymax=upper), linetype = 0, alpha=0.1, data=pred)+
scale_color_manual(values = c("#E69F00", "purple", "#00AFBB", "#000000"))+
geom_line(size=1.2)+ylab("Visitation rate")+xlab("") +labs(col ="poll links", linetype="poll links") +
theme(axis.text.y = element_text(size = 14))+ theme(axis.title = element_text(size = 14)) +
theme(axis.text.x = element_text(size = 14, angle=90))+ theme(axis.title = element_text(size = 14))  +
theme(axis.title.y = element_text(margin = margin(r = 10)))+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
strip.background = element_blank(),panel.border = element_rect(colour = "black"))+
theme(strip.text.x = element_text(size = 12, color = "black"))+
#theme(strip.text.y = element_text(size = 12, color = "black"))+
theme(strip.background = element_rect(color="grey0", fill="grey95", linewidth=0.5, linetype="solid"))+
theme(legend.position="top")
plot.vis2
pred <- expand.grid(seed_percent=seq(0.00001,1,0.001), pl.dens=c(0.1, 0.5,0.9), pol.links=c(1,3,6))
pred$run<-NA
pred$y <- predict(mod.vis2, pred, type="response",allow.new.levels=TRUE)
pred$se <- predict(mod.vis2, pred, type="response", se.fit = TRUE)$se
pred$lower <- pred$y - 1.96 * pred$se
pred$upper <- pred$y + 1.96 * pred$se
plot.vis2<-ggplot(pred,aes(x=log(seed_percent),y=y, color=factor(pol.links), linetype=factor(pol.links)),group=pol.links)+
theme_bw()+facet_grid(~pl.dens,labeller ="label_both", scales = "free") +
geom_ribbon(aes(ymin=lower, ymax=upper), linetype = 0, alpha=0.1, data=pred)+
scale_color_manual(values = c("#E69F00", "purple", "#00AFBB", "#000000"))+
scale_x_continuous(labels=c("0.00001", "0.0001", "0.001", 0.1, "1"))+
geom_line(size=1.2)+ylab("Visitation rate")+xlab("") +labs(col ="poll links", linetype="poll links") +
theme(axis.text.y = element_text(size = 14))+ theme(axis.title = element_text(size = 14)) +
theme(axis.text.x = element_text(size = 14, angle=90))+ theme(axis.title = element_text(size = 14))  +
theme(axis.title.y = element_text(margin = margin(r = 10)))+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
strip.background = element_blank(),panel.border = element_rect(colour = "black"))+
theme(strip.text.x = element_text(size = 12, color = "black"))+
#theme(strip.text.y = element_text(size = 12, color = "black"))+
theme(strip.background = element_rect(color="grey0", fill="grey95", linewidth=0.5, linetype="solid"))+
theme(legend.position="top")
plot.vis2
pred <- expand.grid(seed_percent=seq(0.00001,1,0.001), pl.dens=c(0.1, 0.5,0.9), pol.links=c(2,4,6))
pred$run<-NA
pred$y <- predict(mod.vis2, pred, type="response",allow.new.levels=TRUE)
pred$se <- predict(mod.vis2, pred, type="response", se.fit = TRUE)$se
pred$lower <- pred$y - 1.96 * pred$se
pred$upper <- pred$y + 1.96 * pred$se
plot.vis2<-ggplot(pred,aes(x=log(seed_percent),y=y, color=factor(pol.links), linetype=factor(pol.links)),group=pol.links)+
theme_bw()+facet_grid(~pl.dens,labeller ="label_both", scales = "free") +
geom_ribbon(aes(ymin=lower, ymax=upper), linetype = 0, alpha=0.1, data=pred)+
scale_color_manual(values = c("#E69F00", "purple", "#00AFBB", "#000000"))+
scale_x_continuous(labels=c("0.00001", "0.0001", "0.001", 0.1, "1"))+
geom_line(size=1.2)+ylab("Visitation rate")+xlab("") +labs(col ="poll links", linetype="poll links") +
theme(axis.text.y = element_text(size = 14))+ theme(axis.title = element_text(size = 14)) +
theme(axis.text.x = element_text(size = 14, angle=90))+ theme(axis.title = element_text(size = 14))  +
theme(axis.title.y = element_text(margin = margin(r = 10)))+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
strip.background = element_blank(),panel.border = element_rect(colour = "black"))+
theme(strip.text.x = element_text(size = 12, color = "black"))+
#theme(strip.text.y = element_text(size = 12, color = "black"))+
theme(strip.background = element_rect(color="grey0", fill="grey95", linewidth=0.5, linetype="solid"))+
theme(legend.position="top")
plot.vis2
plot.vis2<-ggplot(pred,aes(x=log(seed_percent),y=y, color=factor(pol.links), linetype=factor(pol.links)),group=pol.links)+
theme_bw()+facet_grid(~pl.dens,labeller ="label_both", scales = "free") +
geom_ribbon(aes(ymin=lower, ymax=upper), linetype = 0, alpha=0.1, data=pred)+
scale_color_manual(values = c("#E69F00", "purple", "#00AFBB", "#000000"))+
scale_x_continuous(labels=c("0.00001", "0.0001", "0.001", 0.1, "1"))+
geom_line(size=1.2)+ylab("Visitation rate")+xlab("") +labs(col ="poll links", linetype="poll links") +
theme(panel.margin.x=unit(0.5, "lines") , panel.margin.y=unit(1,"lines"))+
theme(axis.text.y = element_text(size = 14))+ theme(axis.title = element_text(size = 14)) +
theme(axis.text.x = element_text(size = 14, angle=90))+ theme(axis.title = element_text(size = 14))  +
theme(axis.title.y = element_text(margin = margin(r = 10)))+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
strip.background = element_blank(),panel.border = element_rect(colour = "black"))+
theme(strip.text.x = element_text(size = 12, color = "black"))+
#theme(strip.text.y = element_text(size = 12, color = "black"))+
theme(strip.background = element_rect(color="grey0", fill="grey95", linewidth=0.5, linetype="solid"))+
theme(legend.position="top")
plot.vis2
plot.vis2<-ggplot(pred,aes(x=log(seed_percent),y=y, color=factor(pol.links), linetype=factor(pol.links)),group=pol.links)+
theme_bw()+facet_grid(~pl.dens,labeller ="label_both", scales = "free") +
geom_ribbon(aes(ymin=lower, ymax=upper), linetype = 0, alpha=0.1, data=pred)+
scale_color_manual(values = c("#E69F00", "purple", "#00AFBB", "#000000"))+
scale_x_continuous(labels=c("0.00001", "0.0001", "0.001", 0.1, "1"))+
geom_line(size=1.2)+ylab("Visitation rate")+xlab("") +labs(col ="poll links", linetype="poll links") +
theme(panel.margin.x=unit(1, "lines") , panel.margin.y=unit(1,"lines"))+
theme(axis.text.y = element_text(size = 14))+ theme(axis.title = element_text(size = 14)) +
theme(axis.text.x = element_text(size = 14, angle=90))+ theme(axis.title = element_text(size = 14))  +
theme(axis.title.y = element_text(margin = margin(r = 10)))+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
strip.background = element_blank(),panel.border = element_rect(colour = "black"))+
theme(strip.text.x = element_text(size = 12, color = "black"))+
#theme(strip.text.y = element_text(size = 12, color = "black"))+
theme(strip.background = element_rect(color="grey0", fill="grey95", linewidth=0.5, linetype="solid"))+
theme(legend.position="top")
plot.vis2
plot.vis2<-ggplot(pred,aes(x=log(seed_percent),y=y, color=factor(pol.links), linetype=factor(pol.links)),group=pol.links)+
theme_bw()+facet_grid(~pl.dens,labeller ="label_both", scales = "free") +
geom_ribbon(aes(ymin=lower, ymax=upper), linetype = 0, alpha=0.1, data=pred)+
scale_color_manual(values = c("#E69F00", "purple", "#00AFBB", "#000000"))+
scale_x_continuous(labels=c("0.00001", "0.0001", "0.001", 0.1, "1"))+
geom_line(size=1.2)+ylab("Visitation rate")+xlab("") +labs(col ="poll links", linetype="poll links") +
theme(panel.margin.x=unit(0.8, "lines") , panel.margin.y=unit(0.8,"lines"))+
theme(axis.text.y = element_text(size = 14))+ theme(axis.title = element_text(size = 14)) +
theme(axis.text.x = element_text(size = 14, angle=90))+ theme(axis.title = element_text(size = 14))  +
theme(axis.title.y = element_text(margin = margin(r = 10)))+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
strip.background = element_blank(),panel.border = element_rect(colour = "black"))+
theme(strip.text.x = element_text(size = 12, color = "black"))+
#theme(strip.text.y = element_text(size = 12, color = "black"))+
theme(strip.background = element_rect(color="grey0", fill="grey95", linewidth=0.5, linetype="solid"))+
theme(legend.position="top")
plot.vis2
plot.vis2<-ggplot(pred,aes(x=log(seed_percent),y=y, color=factor(pol.links), linetype=factor(pol.links)),group=pol.links)+
theme_bw()+facet_grid(~pl.dens,labeller ="label_both", scales = "free") +
geom_ribbon(aes(ymin=lower, ymax=upper), linetype = 0, alpha=0.1, data=pred)+
scale_color_manual(values = c("#E69F00", "purple", "#000000"))+
scale_x_continuous(labels=c("0.00001", "0.0001", "0.001", 0.1, "1"))+
geom_line(size=1.2)+ylab("Visitation rate")+xlab("") +labs(col ="poll links", linetype="poll links") +
theme(panel.margin.x=unit(0.8, "lines") , panel.margin.y=unit(0.8,"lines"))+
theme(axis.text.y = element_text(size = 14))+ theme(axis.title = element_text(size = 14)) +
theme(axis.text.x = element_text(size = 14, angle=90))+ theme(axis.title = element_text(size = 14))  +
theme(axis.title.y = element_text(margin = margin(r = 10)))+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
strip.background = element_blank(),panel.border = element_rect(colour = "black"))+
theme(strip.text.x = element_text(size = 12, color = "black"))+
#theme(strip.text.y = element_text(size = 12, color = "black"))+
theme(strip.background = element_rect(color="grey0", fill="grey95", linewidth=0.5, linetype="solid"))+
theme(legend.position="top")
plot.vis2
#consecutive visits
mod.cons2<-glmmTMB(round(cons)~log(seed_percent)*pol.links*pl.dens+(1|run),
family="nbinom2",
data=vis.per.plant)
#consecutive visits
pred2 <- expand.grid(seed_percent=seq(0.00001,1,0.001), pl.dens=c(0.1, 0.5,0.9), pol.links=c(2,4,6))
pred2$run<-NA
pred2$y <- predict(mod.cons2, pred2, type="response",allow.new.levels=TRUE)
pred2$se <- predict(mod.cons2, pred2, type="response", se.fit = TRUE)$se
pred2$lower <- pred2$y - 1.96 * pred$se
pred2$upper <- pred2$y + 1.96 * pred$se
plot.cons2<-ggplot(pred2,aes(x=log(seed_percent),y=y, color=factor(pol.links), linetype=factor(pol.links)),group=pol.links)+
theme_bw()+facet_grid(~pl.dens,labeller ="label_both", scales = "free") +
geom_ribbon(aes(ymin=lower, ymax=upper), linetype = 0, alpha=0.1, data=pred2)+
scale_color_manual(values = c("#E69F00", "purple", "#000000"))+
scale_x_continuous(labels=c("0.00001", "0.0001", "0.001", 0.1, "1"))+
geom_line(size=1.2)+ylab("Consecutive visits")+xlab("") +labs(col ="poll links", linetype="poll links") +
theme(panel.margin.x=unit(0.8, "lines") , panel.margin.y=unit(0.8,"lines"))+
theme(axis.text.y = element_text(size = 14))+ theme(axis.title = element_text(size = 14)) +
theme(axis.text.x = element_text(size = 14, angle=90))+ theme(axis.title = element_text(size = 14))  +
theme(axis.title.y = element_text(margin = margin(r = 10)))+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
strip.background = element_blank(),panel.border = element_rect(colour = "black"))+
theme(strip.text.x = element_text(size = 12, color = "black"))+
#theme(strip.text.y = element_text(size = 12, color = "black"))+
theme(strip.background = element_rect(color="grey0", fill="grey95", linewidth=0.5, linetype="solid"))+
theme(legend.position="top")
plot.cons2
#expected pollination visits
mod.pvis2<-glmmTMB(round(pvis)~log(seed_percent)*pol.links*pl.dens+(1|run),
family="nbinom2",
data=vis.per.plant)
plot.pvis2<-ggplot(pred3,aes(x=log(seed_percent),y=y, color=factor(pol.links), linetype=factor(pol.links)),group=pol.links)+
theme_bw()+facet_grid(~pl.dens,labeller ="label_both", scales = "free") +
geom_ribbon(aes(ymin=lower, ymax=upper), linetype = 0, alpha=0.1, data=pred3)+
scale_color_manual(values = c("#E69F00", "purple", "#000000"))+
scale_x_continuous(labels=c("0.00001", "0.0001", "0.001", 0.1, "1"))+
geom_line(size=1.2)+ylab("Expected number of plants pollinated")+xlab("") +labs(col ="poll links", linetype="poll links") +
theme(panel.margin.x=unit(0.8, "lines") , panel.margin.y=unit(0.8,"lines"))+
theme(axis.text.y = element_text(size = 14))+ theme(axis.title = element_text(size = 14)) +
theme(axis.text.x = element_text(size = 14, angle=90))+ theme(axis.title = element_text(size = 14))  +
theme(axis.title.y = element_text(margin = margin(r = 10)))+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
strip.background = element_blank(),panel.border = element_rect(colour = "black"))+
theme(strip.text.x = element_text(size = 12, color = "black"))+
#theme(strip.text.y = element_text(size = 12, color = "black"))+
theme(strip.background = element_rect(color="grey0", fill="grey95", linewidth=0.5, linetype="solid"))+
theme(legend.position="top")
#expected pollination visits
pred3 <- expand.grid(seed_percent=seq(0.00001,1,0.001), pl.dens=c(0.1, 0.5,0.9), pol.links=c(2,4,6))
pred3$run<-NA
pred3$y <- predict(mod.pvis3, pred, type="response",allow.new.levels=TRUE)
pred3$se <- predict(mod.pvis3, pred, type="response", se.fit = TRUE)$se
#expected pollination visits
pred3 <- expand.grid(seed_percent=seq(0.00001,1,0.001), pl.dens=c(0.1, 0.5,0.9), pol.links=c(2,4,6))
pred3$run<-NA
pred3$y <- predict(mod.pvis2, pred, type="response",allow.new.levels=TRUE)
pred3$se <- predict(mod.pvis2, pred, type="response", se.fit = TRUE)$se
pred3$lower <- pred3$y - 1.96 * pred3$se
pred3$upper <- pred3$y + 1.96 * pred3$se
plot.pvis2<-ggplot(pred3,aes(x=log(seed_percent),y=y, color=factor(pol.links), linetype=factor(pol.links)),group=pol.links)+
theme_bw()+facet_grid(~pl.dens,labeller ="label_both", scales = "free") +
geom_ribbon(aes(ymin=lower, ymax=upper), linetype = 0, alpha=0.1, data=pred3)+
scale_color_manual(values = c("#E69F00", "purple", "#000000"))+
scale_x_continuous(labels=c("0.00001", "0.0001", "0.001", 0.1, "1"))+
geom_line(size=1.2)+ylab("Expected number of plants pollinated")+xlab("") +labs(col ="poll links", linetype="poll links") +
theme(panel.margin.x=unit(0.8, "lines") , panel.margin.y=unit(0.8,"lines"))+
theme(axis.text.y = element_text(size = 14))+ theme(axis.title = element_text(size = 14)) +
theme(axis.text.x = element_text(size = 14, angle=90))+ theme(axis.title = element_text(size = 14))  +
theme(axis.title.y = element_text(margin = margin(r = 10)))+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
strip.background = element_blank(),panel.border = element_rect(colour = "black"))+
theme(strip.text.x = element_text(size = 12, color = "black"))+
#theme(strip.text.y = element_text(size = 12, color = "black"))+
theme(strip.background = element_rect(color="grey0", fill="grey95", linewidth=0.5, linetype="solid"))+
theme(legend.position="top")
plot.pvis2
Fig_glmm_pol_dens<-ggarrange(plot.vis2, plot.cons2, plot.pvis2, widths = c(6, 6, 6), labels = c("a", "b", "c"), nrow = 3, common.legend = TRUE)
annotate_figure(Fig_glmm_pol_dens, bottom = text_grob("plant intermixing [log]", size=14))
ggsave(paste0(dirF, "Fig_glmm_pol_dens_all_log.png"),width=8, height = 12, units="in", dpi=600 )
i
annotate_figure(Fig_glmm_pol_dens, bottom = text_grob("plant intermixing [log]"))
annotate_figure(Fig_glmm_pol_dens, bottom = text_grob("plant intermixing [log]", size=14))
plot.vis2<-ggplot(pred,aes(x=log(seed_percent),y=y, color=factor(pol.links), linetype=factor(pol.links)),group=pol.links)+
theme_bw()+facet_grid(~pl.dens,labeller ="label_both", scales = "free") +
geom_ribbon(aes(ymin=lower, ymax=upper), linetype = 0, alpha=0.1, data=pred)+
scale_color_manual(values = c("#E69F00", "purple", "#000000"))+
scale_x_continuous(labels=c("0.00001", "0.0001", "0.001", 0.1, "1"))+
geom_line(size=1.2)+ylab("Visitation rate")+xlab("") +labs(col ="poll links", linetype="poll links") +
theme(panel.margin.x=unit(0.8, "lines") , panel.margin.y=unit(0.8,"lines"))+
theme(axis.text.y = element_text(size = 14))+ theme(axis.title = element_text(size = 14)) +
theme(axis.text.x = element_text(size = 14, angle=90))+ theme(axis.title = element_text(size = 14))  +
theme(axis.title.y = element_text(margin = margin(r = 10)))+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
strip.background = element_blank(),panel.border = element_rect(colour = "black"))+
theme(strip.text.x = element_text(size = 12, color = "black"))+
#theme(strip.text.y = element_text(size = 12, color = "black"))+
theme(strip.background = element_rect(color="grey0", fill="grey95", linewidth=0.5, linetype="solid"))+
theme(legend.position="top")+
theme(axis.text.x=element_blank())
plot.vis2
#consecutive visits
pred2 <- expand.grid(seed_percent=seq(0.00001,1,0.001), pl.dens=c(0.1, 0.5,0.9), pol.links=c(2,4,6))
pred2$run<-NA
pred2$y <- predict(mod.cons2, pred2, type="response",allow.new.levels=TRUE)
pred2$se <- predict(mod.cons2, pred2, type="response", se.fit = TRUE)$se
pred2$lower <- pred2$y - 1.96 * pred$se
pred2$upper <- pred2$y + 1.96 * pred$se
plot.cons2<-ggplot(pred2,aes(x=log(seed_percent),y=y, color=factor(pol.links), linetype=factor(pol.links)),group=pol.links)+
theme_bw()+facet_grid(~pl.dens,labeller ="label_both", scales = "free") +
geom_ribbon(aes(ymin=lower, ymax=upper), linetype = 0, alpha=0.1, data=pred2)+
scale_color_manual(values = c("#E69F00", "purple", "#000000"))+
scale_x_continuous(labels=c("0.00001", "0.0001", "0.001", 0.1, "1"))+
geom_line(size=1.2)+ylab("Consecutive visits")+xlab("") +labs(col ="poll links", linetype="poll links") +
theme(panel.margin.x=unit(0.8, "lines") , panel.margin.y=unit(0.8,"lines"))+
theme(axis.text.y = element_text(size = 14))+ theme(axis.title = element_text(size = 14)) +
theme(axis.text.x = element_text(size = 14, angle=90))+ theme(axis.title = element_text(size = 14))  +
theme(axis.title.y = element_text(margin = margin(r = 10)))+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
strip.background = element_blank(),panel.border = element_rect(colour = "black"))+
theme(strip.text.x = element_text(size = 12, color = "black"))+
#theme(strip.text.y = element_text(size = 12, color = "black"))+
theme(strip.background = element_rect(color="grey0", fill="grey95", linewidth=0.5, linetype="solid"))+
theme(legend.position="top")+
theme(axis.text.x=element_blank())
plot.cons2
Fig_glmm_pol_dens<-ggarrange(plot.vis2, plot.cons2, plot.pvis2, widths = c(6, 6, 6), labels = c("a", "b", "c"), nrow = 3, common.legend = TRUE)
annotate_figure(Fig_glmm_pol_dens, bottom = text_grob("plant intermixing [log]", size=14))
ggsave(paste0(dirF, "Fig_glmm_pol_dens_all_log.png"),width=8, height = 12, units="in", dpi=600 )
#Working Dir
#setwd("C:/LocalData/susakort/abm pollination/Scripts_1st_submission/R_scripts") #setwd to your own directory
setwd("C:/LocalData/susakort/GitHub/NLmodel_GIT/NLmodelAnalyses/Data")
ggsave(paste0(dirF, "Fig_glmm_pol_dens_ex_2.png"),width=8, height = 12, units="in", dpi=600 )
#Visitation rate
#offset(pl.dens)
mod.vis2<-glmmTMB(round(number_visits)~log(seed_percent)*pol.links+(1|run),
family="nbinom2",
data=vis.per.plant)
#checks model fit
#check_model(mod.vis2)
#dharma residual checks
#res_vis<- simulateResiduals(mod.vis2, 200)
#plot(res_vis)#tests if the overall distribution conforms to expectations
#testDispersion(res_vis) #tests if the simulated dispersion is equal to the observed dispersion
#testResiduals(res_vis)
#testUniformity(res_vis)
#testZeroInflation(res_vis) #tests if there are more zeros in the data than expected from the simulations
#consecutive visit
#+offset(pl.dens)
mod.cons2<-glmmTMB(round(cons)~log(seed_percent)*pol.links+(1|run),
family="nbinom2",
data=vis.per.plant)
#checks model fit
#check_model(mod.cons2)
#dharma residual checks
#res_vis<- simulateResiduals(mod.cons2, 200)
#plot(res_vis)#tests if the overall distribution conforms to expectations
#testDispersion(res_vis) #tests if the simulated dispersion is equal to the observed dispersion
#testResiduals(res_vis)
#testUniformity(res_vis)
#testZeroInflation(res_vis) #tests if there are more zeros in the data than expected from the simulations
#expected pollination visits
#+offset(pl.dens)
mod.pvis2<-glmmTMB(round(pvis)~log(seed_percent)*pol.links+(1|run),
family="nbinom2",
data=vis.per.plant)
#checks model fit
#check_model(mod.pvis2)
### plot the figures
#visitation rate
#pl.dens=mean(vis.per.plant$pl.dens),
pred <- expand.grid(seed_percent=seq(0.00001,1,0.001), pol.links=c(2,4,6))
pred$run<-NA
pred$y <- predict(mod.vis2, pred, type="response",allow.new.levels=TRUE)
pred$se <- predict(mod.vis2, pred, type="response", se.fit = TRUE)$se
pred$lower <- pred$y - 1.96 * pred$se
pred$upper <- pred$y + 1.96 * pred$se
#"#00AFBB",
plot.vis<-ggplot(pred,aes(x=log(seed_percent),y=y, color=factor(pol.links),linetype=factor(pol.links)))+
theme_bw() + geom_ribbon(aes(ymin=lower, ymax=upper), linetype = 0, alpha=0.1, data=pred)+
scale_color_manual(values = c("#E69F00", "purple", "#000000"))+
scale_x_continuous(labels=c("0.00001", "0.0001", "0.001", 0.1, "1"))+
geom_line(size=1.2)+ylab("Visitation rate")+xlab("") +labs(col ="poll links", linetype="poll links") +
theme(axis.text.y = element_text(size = 14))+ theme(axis.title = element_text(size = 14)) +
theme(axis.text.x = element_text(size = 14, angle=90))+ theme(axis.title = element_text(size = 14)) +
theme(axis.title.y = element_text(size=14,margin = margin(r = 10)))+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
strip.background = element_blank(),panel.border = element_rect(colour = "black"))+
theme(strip.text.x = element_text(size = 14, color = "black"))+
theme(strip.background = element_rect(color="grey0", fill="grey95", linewidth=0.5, linetype="solid"))+
theme(legend.position="top")
plot.vis
#consecutive visits
#pl.dens=mean(vis.per.plant$pl.dens)
pred2 <- expand.grid(seed_percent=seq(0.00001,1,0.001), pol.links=c(2,4,6))
pred2$run<-NA
pred2$y <- predict(mod.cons2, pred2, type="response",allow.new.levels=TRUE)
pred2$se <- predict(mod.cons2, pred2, type="response", se.fit = TRUE)$se
pred2$lower <- pred2$y - 1.96 * pred2$se
pred2$upper <- pred2$y + 1.96 * pred2$se
#"#00AFBB",
plot.cons<-ggplot(pred2,aes(x=log(seed_percent),y=y, color=factor(pol.links),linetype=factor(pol.links)))+
theme_bw() + geom_ribbon(aes(ymin=lower, ymax=upper), linetype = 0, alpha=0.1, data=pred2)+
scale_color_manual(values = c("#E69F00", "purple", "#000000"))+
scale_x_continuous(labels=c("0.00001", "0.0001", "0.001", 0.1, "1"))+
geom_line(size=1.2)+ylab("Consecutive visits")+xlab("") +labs(col ="poll links", linetype="poll links") +
theme(axis.text.y = element_text(size = 14))+ theme(axis.title = element_text(size = 14)) +
theme(axis.text.x = element_text(size = 14, angle=90))+ theme(axis.title = element_text(size = 14)) +
theme(axis.title.y = element_text(size=14,margin = margin(r = 10)))+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
strip.background = element_blank(),panel.border = element_rect(colour = "black"))+
theme(strip.text.x = element_text(size = 14, color = "black"))+
theme(strip.background = element_rect(color="grey0", fill="grey95", linewidth=0.5, linetype="solid"))+
theme(legend.position="top")
plot.cons
#expected pollination visits
#pl.dens=mean(vis.per.plant$pl.dens),
pred3 <- expand.grid(seed_percent=seq(0.00001,1,0.001), pol.links=c(2,4,6))
pred3$run<-NA
pred3$y <- predict(mod.pvis2, pred3, type="response",allow.new.levels=TRUE)
pred3$se <- predict(mod.pvis2, pred3, type="response", se.fit = TRUE)$se
pred3$lower <- pred3$y - 1.96 * pred3$se
pred3$upper <- pred3$y + 1.96 * pred3$se
# "#00AFBB" #cyan
plot.pvis<-ggplot(pred3,aes(x=log(seed_percent),y=y, color=factor(pol.links),linetype=factor(pol.links)))+
theme_bw() + geom_ribbon(aes(ymin=lower, ymax=upper), linetype = 0, alpha=0.1, data=pred3)+
scale_color_manual(values = c("#E69F00", "purple", "#000000"))+
scale_x_continuous(labels=c("0.00001", "0.0001", "0.001", 0.1, "1"))+
geom_line(size=1.2)+ylab("Expected number of plants pollinated")+xlab("") +labs(col ="poll links", linetype="poll links") +
theme(axis.text.y = element_text(size = 14))+ theme(axis.title = element_text(size = 14)) +
theme(axis.text.x = element_text(size = 14, angle=90))+ theme(axis.title = element_text(size = 14)) +
theme(axis.title.y = element_text(size=14,margin = margin(r = 10)))+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
strip.background = element_blank(),panel.border = element_rect(colour = "black"))+
theme(strip.text.x = element_text(size = 14, color = "black"))+
theme(strip.background = element_rect(color="grey0", fill="grey95", linewidth=0.5, linetype="solid"))+
theme(legend.position="top")
plot.pvis
### plot the figures
#visitation rate
#pl.dens=mean(vis.per.plant$pl.dens),
pred <- expand.grid(seed_percent=seq(0.00001,1,0.001), pol.links=c(2,4,6))
pred$run<-NA
pred$y <- predict(mod.vis2, pred, type="response",allow.new.levels=TRUE)
pred$se <- predict(mod.vis2, pred, type="response", se.fit = TRUE)$se
pred$lower <- pred$y - 1.96 * pred$se
pred$upper <- pred$y + 1.96 * pred$se
#"#00AFBB",
plot.vis<-ggplot(pred,aes(x=log(seed_percent),y=y, color=factor(pol.links),linetype=factor(pol.links)))+
theme_bw() + geom_ribbon(aes(ymin=lower, ymax=upper), linetype = 0, alpha=0.1, data=pred)+
scale_color_manual(values = c("#E69F00", "purple", "#000000"))+
scale_x_continuous(labels=c("0.00001", "0.0001", "0.001", 0.1, "1"))+
geom_line(size=1.2)+ylab("Visitation rate")+xlab("") +labs(col ="poll links", linetype="poll links") +
theme(axis.text.y = element_text(size = 14))+ theme(axis.title = element_text(size = 14)) +
theme(axis.text.x = element_text(size = 14, angle=90))+ theme(axis.title = element_text(size = 14)) +
theme(axis.title.y = element_text(size=14,margin = margin(r = 10)))+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
strip.background = element_blank(),panel.border = element_rect(colour = "black"))+
theme(strip.text.x = element_text(size = 14, color = "black"))+
theme(strip.background = element_rect(color="grey0", fill="grey95", linewidth=0.5, linetype="solid"))+
theme(legend.position="top")
plot.vis
#consecutive visits
#pl.dens=mean(vis.per.plant$pl.dens)
pred2 <- expand.grid(seed_percent=seq(0.00001,1,0.001), pol.links=c(2,4,6))
pred2$run<-NA
pred2$y <- predict(mod.cons2, pred2, type="response",allow.new.levels=TRUE)
pred2$se <- predict(mod.cons2, pred2, type="response", se.fit = TRUE)$se
pred2$lower <- pred2$y - 1.96 * pred2$se
pred2$upper <- pred2$y + 1.96 * pred2$se
#"#00AFBB",
plot.cons<-ggplot(pred2,aes(x=log(seed_percent),y=y, color=factor(pol.links),linetype=factor(pol.links)))+
theme_bw() + geom_ribbon(aes(ymin=lower, ymax=upper), linetype = 0, alpha=0.1, data=pred2)+
scale_color_manual(values = c("#E69F00", "purple", "#000000"))+
scale_x_continuous(labels=c("0.00001", "0.0001", "0.001", 0.1, "1"))+
geom_line(size=1.2)+ylab("Consecutive visits")+xlab("") +labs(col ="poll links", linetype="poll links") +
theme(axis.text.y = element_text(size = 14))+ theme(axis.title = element_text(size = 14)) +
theme(axis.text.x = element_text(size = 14, angle=90))+ theme(axis.title = element_text(size = 14)) +
theme(axis.title.y = element_text(size=14,margin = margin(r = 10)))+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
strip.background = element_blank(),panel.border = element_rect(colour = "black"))+
theme(strip.text.x = element_text(size = 14, color = "black"))+
theme(strip.background = element_rect(color="grey0", fill="grey95", linewidth=0.5, linetype="solid"))+
theme(legend.position="top")
plot.cons
#expected pollination visits
#pl.dens=mean(vis.per.plant$pl.dens),
pred3 <- expand.grid(seed_percent=seq(0.00001,1,0.001), pol.links=c(2,4,6))
pred3$run<-NA
pred3$y <- predict(mod.pvis2, pred3, type="response",allow.new.levels=TRUE)
pred3$se <- predict(mod.pvis2, pred3, type="response", se.fit = TRUE)$se
pred3$lower <- pred3$y - 1.96 * pred3$se
pred3$upper <- pred3$y + 1.96 * pred3$se
# "#00AFBB" #cyan
plot.pvis<-ggplot(pred3,aes(x=log(seed_percent),y=y, color=factor(pol.links),linetype=factor(pol.links)))+
theme_bw() + geom_ribbon(aes(ymin=lower, ymax=upper), linetype = 0, alpha=0.1, data=pred3)+
scale_color_manual(values = c("#E69F00", "purple", "#000000"))+
scale_x_continuous(labels=c("0.00001", "0.0001", "0.001", 0.1, "1"))+
geom_line(size=1.2)+ylab("Expected number of plants pollinated")+xlab("") +labs(col ="poll links", linetype="poll links") +
theme(axis.text.y = element_text(size = 14))+ theme(axis.title = element_text(size = 14)) +
theme(axis.text.x = element_text(size = 14, angle=90))+ theme(axis.title = element_text(size = 14)) +
theme(axis.title.y = element_text(size=14,margin = margin(r = 10)))+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
strip.background = element_blank(),panel.border = element_rect(colour = "black"))+
theme(strip.text.x = element_text(size = 14, color = "black"))+
theme(strip.background = element_rect(color="grey0", fill="grey95", linewidth=0.5, linetype="solid"))+
theme(legend.position="top")
plot.pvis
Fig_glmm_pol_dens<-ggarrange(plot.vis, plot.cons, plot.pvis, widths = c(6, 6, 6), labels = c("a", "b", "c"), ncol = 3, common.legend = TRUE)
annotate_figure(Fig_glmm_pol_dens,bottom = text_grob("plant intermixing [log]", size=14))
ggsave(paste0(dirF, "Fig5_glmm_poll.degree_ex_2.png"),width=10, height = 6, units="in", dpi=600 )
ggsave(paste0(dirF, "Fig5_glmm_poll.degree_ex_2.png"),width=10, height = 6, units="in", dpi=600 )
